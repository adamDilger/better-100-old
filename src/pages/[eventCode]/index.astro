---
import { db, Vote, Person } from "astro:db";
import Layout from "../../layouts/Layout.astro";
import { isNotNull, eq } from "astro:db";
import { desc } from "astro:db";
import { Event } from "astro:db";

const events = await db
  .select({ name: Event.name, started: Event.started })
  .from(Event)
  .where(eq(Event.id, 1));
const event = events[0];

if (!event) {
  Astro.response.status = 404;
}

const played = await db
  .select({
    voterName: Person.name,
    title: Vote.title,
    thumbnailUrl: Vote.thumbnailUrl,
  })
  .from(Vote)
  .innerJoin(Person, eq(Person.id, Vote.personId))
  .where(isNotNull(Vote.playedOn))
  .orderBy(desc(Vote.playedOn));
---

<Layout title="better 100">
  <h2 class="text-center text-1xl font-light pt-10">{event.name}</h2>

  <div class="divide-y divide-red-400 gap-5 px-8">
    {
      !event.started ? (
        <div class="text-center text-2xl font-light pt-6 pb-4">
          Countdown not started
        </div>
      ) : (
        played.length === 0 && (
          <>
            <h3 class="text-center text-2xl font-light pt-6 pb-4">
              Played songs
            </h3>
            <div class="text-center text-2xl font-light pt-10 pb-4">TBD</div>
          </>
        )
      )
    }

    {
      played.map((vote, i) => (
        <div class="flex items-center py-3">
          <div class="text-4xl pr-5 font-bold text-red-500">{i + 24}</div>
          <div class="">
            <div>
              <img src={vote.thumbnailUrl} class="w-20 h-20" />
            </div>
            <div class="text-lg font-bold">{vote.title}</div>
            <div class="text-sm">{vote.voterName}</div>
          </div>
        </div>
      ))
    }
  </div>
</Layout>
